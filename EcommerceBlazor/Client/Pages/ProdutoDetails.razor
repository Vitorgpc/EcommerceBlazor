@page "/produto/{id:int}"
@inject IProdutoService produtoService
@inject ICarrinhoService carrinhoService

@if (produto == null)
{
    <span>@mensagem</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@produto.UrlImagem" alt="@produto.Nome" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@produto.Nome</h2>
            <p>@produto.Descricao</p>
            @if (produto.Variantes != null && produto.Variantes.Count > 1)
            {
                <div class="mb-3">
                    <select class="form-select" @bind="idTipoAtual">
                        @foreach (var variante in produto.Variantes)
                        {
                            <option value="@variante.TipoProdutoId">@variante.TipoProduto.Nome</option>
                        }
                    </select>
                </div>
            }
            @if(GetSelectVariante() != null)
            {
                @if(GetSelectVariante().PrecoOriginal > GetSelectVariante().Preco)
                {
                    <h6 class="text-muted original-price">
                        R$ @GetSelectVariante().PrecoOriginal
                    </h6>
                }

                <h4 class="price">
                    R$ @GetSelectVariante().Preco
                </h4>
            }

            <button class="btn btn-success" @onclick="AddToCart">
                <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp; Adicionar ao Carrinho
            </button>
        </div>
    </div>
}

@code {
    private Produto? produto = null;
    private string mensagem = string.Empty;
    private int idTipoAtual = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        mensagem = "Carregando Produto...";
        var resultado = await produtoService.GetProduto(Id);
        if (!resultado.Success)
        {
            mensagem = resultado.Message;
        }
        else
        {
            produto = resultado.Data;
            if (produto.Variantes.Count > 0)
            {
                idTipoAtual = produto.Variantes[0].TipoProdutoId;
            }
        }
    }

    private ProdutoVariante GetSelectVariante()
    {
        var variante = produto.Variantes.FirstOrDefault(v => v.TipoProdutoId == idTipoAtual);
        return variante;
    }

    private async Task AddToCart()
    {
        var produtoVariante = GetSelectVariante();
        var itemCarrinho = new ItemCarrinho
        {
            ProdutoId = produtoVariante.ProdutoId,
            TipoProdutoId = produtoVariante.TipoProdutoId
        };

        await carrinhoService.AddToCart(itemCarrinho);
    }
}
