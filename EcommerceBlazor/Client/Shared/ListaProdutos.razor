@inject IProdutoService produtoService
@implements IDisposable

@if (produtoService.Produtos == null || produtoService.Produtos.Count == 0)
{
    <span>Carregando Produtos...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var produto in produtoService.Produtos)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/produto/@produto.Produto_ID">
                        <img class="media-img" src="@produto.UrlImagem" alt="@produto.Nome" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/produto/@produto.Produto_ID">
                        <h4 class="mb-0">@produto.Nome</h4>
                    </a>
                    <p>@produto.Descricao</p>
                    @* <h5 class="price">R$ @produto.Preco</h5> *@
                </div>
            </li>
        }
    </ul>
}

@code {
    protected override void OnInitialized()
    {
        produtoService.OnProdutoChanged += StateHasChanged;
    }

    public void Dispose()
    {
        produtoService.OnProdutoChanged -= StateHasChanged;
    }
}
